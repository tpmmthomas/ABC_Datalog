
---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------
[-[eq,[anna],[lily]]],[[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]]
[-[eq,[lily],[anna]]],[[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]]

---------Violations are------

--------- Start repInsInc round: 1

-------- Start blockProof1: -------- 
[-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]
[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]
[-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0]

TheoryIn is: [[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]

[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

Original Axiom is: [+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

-------- getAdjCond for  Rule: [+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

 PreCands are: []

 Found unprovable precondition : add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

 All found unprovable preconditions: [add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]

Original Axiom is: [+[mum,[anna],[victor]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[]

-- Theory=[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]


[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

-- The theorems of Predicate -mum-- are:
[([+[mum,[lily],[tina]]],[[([-[mum,[lily],[tina]]],[+[mum,[lily],[tina]]],[],[],[0,0])]]),([+[mum,[lily],[victor]]],[[([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]])]
Original Axiom is: [+[mum,[lily],[victor]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[]

-- Theory=[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]


[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

-- The theorems of Predicate -mum-- are:
[([+[mum,[anna],[victor]]],[[([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]]),([+[mum,[lily],[tina]]],[[([-[mum,[lily],[tina]]],[+[mum,[lily],[tina]]],[],[],[0,0])]])]
-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]


-------- SuffGoals is:
[]


--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

28 repair plans for blockP:[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]


[incomp,([delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([delete([+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([delete([+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]
[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]


-------- Start blockProof1: -------- 
[-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]
[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]
[-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0]

TheoryIn is: [[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]

[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

Original Axiom is: [+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

-------- getAdjCond for  Rule: [+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

 PreCands are: []

 Found unprovable precondition : add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

 All found unprovable preconditions: [add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]

Original Axiom is: [+[mum,[lily],[victor]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[]

-- Theory=[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]


[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

-- The theorems of Predicate -mum-- are:
[([+[mum,[anna],[victor]]],[[([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]]),([+[mum,[lily],[tina]]],[[([-[mum,[lily],[tina]]],[+[mum,[lily],[tina]]],[],[],[0,0])]])]
Original Axiom is: [+[mum,[anna],[victor]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[]

-- Theory=[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]


[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]

-- The theorems of Predicate -mum-- are:
[([+[mum,[lily],[tina]]],[[([-[mum,[lily],[tina]]],[+[mum,[lily],[tina]]],[],[],[0,0])]]),([+[mum,[lily],[victor]]],[[([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]])]
-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]


-------- SuffGoals is:
[]


--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[lily],[victor]]]

rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[mum,[anna],[victor]]]

rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

--Blocking Repair Plan11 InpClause:
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]

arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

28 repair plans for blockP:[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]


[incomp,([delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([delete([+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([delete([+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]
[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]


2 fault's new repair plans found: [[[incomp,([delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([delete([+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([delete([+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]],[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[victor]]]]]],[[incomp,([delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([delete([+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([delete([+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[anna],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[[+[mum,[lily],[victor]]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]],[incomp,([arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]]),[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[victor]]],[+[mum,[anna],[victor]]]]]]]


[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]

All collections of repair plans are: 
[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[delete([+[mum,[anna],[victor]]])]
[delete([+[mum,[lily],[victor]]])]
[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])]
[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])]
[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])]
[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])]
[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])]
[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])]
[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])]
[weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]
[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])]
[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])]


-------- Start to apply repair plans:
delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


******** RepPlan: delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
delete([+[mum,[anna],[victor]]])


******** RepPlan: delete([+[mum,[anna],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
delete([+[mum,[lily],[victor]]])


******** RepPlan: delete([+[mum,[lily],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


******** RepPlan: add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])


******** RepPlan: ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])


******** RepPlan: ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])


******** Finish renaming.

******** RepPlan: rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])


******** Finish renaming.

******** RepPlan: rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])


******** Finish renaming.

******** RepPlan: rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])


******** Finish renaming.

******** RepPlan: rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


********  Warning : a rule without variables is resulted, so refuse the repair: 
weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


********  Warning : a rule without variables is resulted, so refuse the repair: 
weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


********  Warning : a rule without variables is resulted, so refuse the repair: 
weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


********  Warning : a rule without variables is resulted, so refuse the repair: 
weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


********  Warning : a rule without variables is resulted, so refuse the repair: 
weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


-------- Start apply arityInc-------- 
arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])
******** RepPlan: arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])


-------- Start apply arityInc-------- 
arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])
******** RepPlan: arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])


-------- Start apply arityInc-------- 
arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])
******** RepPlan: arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])


-------- Start apply arityInc-------- 
arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])
******** RepPlan: arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])

-------- Finish applying repair plans.

-- There are 29 repaired states: 
[[[],[weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[],[weaken(vble(x),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[],[weaken(vble(y),[dummy_victor_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[],[weaken(vble(z),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[],[weaken(vble(z),[dummy_lily_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]


-- RepStatesFine [[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[[[],[weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]
[+[mum,[anna],[victor],[dummy_Normal1]]]
[+[mum,[lily],[tina],[dummy_Normal1]]]
[+[mum,[lily],[victor],[dummy_Normal1]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]]
[+[mum,[anna],[victor],[dummy_Normal1]]]
[+[mum,[lily],[tina],[dummy_Normal1]]]
[+[mum,[lily],[victor],[dummy_Abnormal1]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]]
[+[mum,[anna],[victor],[dummy_Abnormal1]]]
[+[mum,[lily],[tina],[dummy_Normal1]]]
[+[mum,[lily],[victor],[dummy_Normal1]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[dummy_victor_1]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[dummy_victor_1]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[dummy_lily_1],[victor]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[dummy_anna_1],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,vble(z),vble(y)],-[mum,[anna],vble(z)]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[vble(x)/vble(y),[anna]/vble(z),[lily]/vble(x)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[],[-[eq,[anna],vble(x)],-[mum,[anna],vble(x)]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,vble(x1),vble(y)],-[mum,[anna],vble(y)],-[mum,[anna],vble(x1)]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[vble(x)/vble(y),[anna]/vble(z),[lily]/vble(x)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[],[-[eq,vble(x),[anna]],-[mum,[anna],vble(x)]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[[lily]/vble(x)],[-[eq,[anna],[lily]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[anna],vble(y)],-[mum,[lily],[victor]]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[[anna]/vble(x)],[-[eq,[anna],[anna]],-[mum,[lily],[victor]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)],-[mum,[anna],[victor]]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[[lily]/vble(x)],[-[eq,[anna],[lily]],-[mum,[anna],[victor]]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[[lily]/vble(x)],[-[eq,[lily],[anna]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[anna],vble(y)],-[mum,[lily],[victor]]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[[anna]/vble(x)],[-[eq,[anna],[anna]],-[mum,[lily],[victor]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)],-[mum,[anna],[victor]]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[[lily]/vble(x)],[-[eq,[lily],[anna]],-[mum,[anna],[victor]]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,vble(z),vble(y)],-[mum,[lily],vble(z)]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[vble(x)/vble(y),[anna]/vble(x),[lily]/vble(z)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[],[-[eq,[lily],vble(x)],-[mum,[lily],vble(x)]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,vble(x1),vble(y)],-[mum,[lily],vble(y)],-[mum,[lily],vble(x1)]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[vble(x)/vble(y),[anna]/vble(x),[lily]/vble(z)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[],[-[eq,vble(x),[lily]],-[mum,[lily],vble(x)]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------
[-[eq,[anna],[lily]]],[[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[tina]/vble(x),[tina]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[],[-[\=,[victor],vble(x)],-[mum,[lily],vble(x)]],[0,0]),([-[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[],[-[\=,[victor],[tina]]],[0,0]),([-[\=,[victor],[tina]]],unae,[],[],[0,0])]]
[-[eq,[lily],[anna]]],[[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[tina]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[tina]]],[],[-[mum,[anna],[tina]]],[0,0]),([-[mum,[anna],[tina]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[[tina]/vble(x)],[-[\=,[victor],[tina]]],[0,0]),([-[\=,[victor],[tina]]],unae,[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)],-[mum,[lily],[victor]]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[[anna]/vble(x)],[-[eq,[lily],[anna]],-[mum,[lily],[victor]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[[anna]/vble(x)],[-[eq,[lily],[anna]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[lily],vble(y)],-[mum,[anna],[victor]]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[[lily]/vble(x)],[-[eq,[lily],[lily]],-[mum,[anna],[victor]]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)],-[mum,[lily],[victor]]]
The derivation steps are: 
[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[1,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[[anna]/vble(x)],[-[eq,[anna],[lily]],-[mum,[lily],[victor]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[[anna]/vble(x)],[-[eq,[anna],[lily]]],[1,0])]
******** Error: Loop resolution ********
Current goal is: 
[-[mum,[lily],vble(y)],-[mum,[lily],vble(y)],-[mum,[anna],[victor]]]
The derivation steps are: 
[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[1,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[[lily]/vble(x)],[-[eq,[lily],[lily]],-[mum,[anna],[victor]]],[1,0])]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]]
[+[mum,[anna],[victor]]]
[+[mum,[lily],[tina]]]
[+[mum,[lily],[victor]]]


---------SufGoals is------
[]
---------InsufGoals is------
[]
---------InComps are------
[-[eq,[anna],[lily]]],[[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]]
[-[eq,[lily],[anna]]],[[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]]

---------Violations are------

-- All faulty states: 24
0,0,[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,2,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[([-[eq,[anna],[lily]]],[[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[tina]/vble(x),[tina]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[],[-[\=,[victor],vble(x)],-[mum,[lily],vble(x)]],[0,0]),([-[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]],[],[-[\=,[victor],[tina]]],[0,0]),([-[\=,[victor],[tina]]],unae,[],[],[0,0])]]),([-[eq,[lily],[anna]]],[[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[tina]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[tina]]],[],[-[mum,[anna],[tina]]],[0,0]),([-[mum,[anna],[tina]]],[+[mum,[anna],vble(x)],-[\=,[victor],vble(x)]],[[tina]/vble(x)],[-[\=,[victor],[tina]]],[0,0]),([-[\=,[victor],[tina]]],unae,[],[],[0,0])]])]
0,0,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,0,[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
0,2,[[[],[weaken(vble(x),[dummy_anna_1],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[([-[eq,[anna],[lily]]],[[([-[eq,[anna],[lily]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(x),[lily]/vble(z),[victor]/vble(y)],[-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[0,0]),([-[mum,[anna],vble(y)],-[mum,[lily],vble(y)]],[+[mum,[anna],[victor]]],[],[-[mum,[lily],[victor]]],[0,0]),([-[mum,[lily],[victor]]],[+[mum,[lily],[victor]]],[],[],[0,0])]]),([-[eq,[lily],[anna]]],[[([-[eq,[lily],[anna]]],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[[anna]/vble(z),[lily]/vble(x),[victor]/vble(y)],[-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[0,0]),([-[mum,[lily],vble(y)],-[mum,[anna],vble(y)]],[+[mum,[lily],[victor]]],[],[-[mum,[anna],[victor]]],[0,0]),([-[mum,[anna],[victor]]],[+[mum,[anna],[victor]]],[],[],[0,0])]])]

An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
An Optimal repaired theory with cost:1 and the fault state: [],[],[]
[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]
--The number of Optimals: 22
[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]
[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]],[],[],[]

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

--------------AllRepStates: [fault-free,1/1,[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]


--------------executation time 2---
time takes
311

------------- AllRepStates -------------
[fault-free,1/1,[[[arityInc(mum,-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[arityInc(mum,+[mum,[lily],[victor]],[+[mum,[lily],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[lily],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[arityInc(mum,+[mum,[anna],[victor]],[+[mum,[anna],[victor]]],-[mum,vble(x),vble(y)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[delete([+[mum,[anna],[victor],[dummy_Abnormal1]]]),deleArg(mum,3)]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([victor],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([victor],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([lily],+[mum,[lily],[victor]],[+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[rename([anna],+[mum,[anna],[victor]],[+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[lily],[victor]]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[ass2rule([+[mum,[anna],[victor]]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[add_pre(-[dummyPred,vble(x),vble(z)],[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[mum,[lily],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[mum,[anna],[victor]]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]
[fault-free,1/1,[[[delete([+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]])],[]],[[[anna]],[[lily]],[[tina]],[[victor]]],[],[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]],[],[[+[eq,[anna],[lily]]],[+[eq,[lily],[anna]]]]]]




------------- TASS -------------
FullyNumRaw is: 22
FullyNum is: 22


[[+[eq,vble(x),vble(z)],-[dummyPred,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[anna],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[\=,[lily],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[anna]]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[anna],vble(x)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,vble(x),[victor]],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,vble(x),[lily]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],vble(x)],-[eq,[lily],vble(x)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[dummy_victor_1]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[dummy_lily_1],[victor]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[\=,[victor],vble(x)]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,vble(x),[anna]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],vble(x)],-[eq,[anna],vble(x)]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[dummy_victor_1]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[dummy_anna_1],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y)],-[mum,vble(z),vble(y)]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Abnormal1]],-[mum,vble(z),vble(y),[dummy_Abnormal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Abnormal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Normal1]]]]
[[+[eq,vble(x),vble(z)],-[mum,vble(x),vble(y),[dummy_Normal1]],-[mum,vble(z),vble(y),[dummy_Normal1]]],[+[mum,[anna],[victor],[dummy_Normal1]]],[+[mum,[lily],[tina],[dummy_Normal1]]],[+[mum,[lily],[victor],[dummy_Abnormal1]]]]
[[+[mum,[anna],[victor]]],[+[mum,[lily],[tina]]],[+[mum,[lily],[victor]]]]



------------- TBSS -------------
SemiNumRaw is: 0
SemiNum is: 0





